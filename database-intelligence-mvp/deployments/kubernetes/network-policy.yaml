# Network Security Policies for Database Intelligence Collector
# Implements defense-in-depth network security

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nr-db-intelligence-netpol
  namespace: monitoring
  labels:
    app: nr-db-intelligence
    component: security
spec:
  podSelector:
    matchLabels:
      app: nr-db-intelligence
      component: collector
  
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress Rules - What can connect TO the collector
  ingress:
  # Allow Prometheus to scrape metrics
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8888  # Metrics endpoint
  
  # Allow health checks from ingress controllers
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-system
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 13133  # Health check endpoint
  
  # Allow debugging access (zpages)
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          role: debug
    ports:
    - protocol: TCP
      port: 55679  # zpages endpoint
  
  # Egress Rules - What the collector can connect TO
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow New Relic OTLP endpoint
  - to: []
    ports:
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 4317  # OTLP gRPC
    - protocol: TCP
      port: 4318  # OTLP HTTP
  
  # Allow database connections
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    - namespaceSelector:
        matchLabels:
          name: postgres
    - namespaceSelector:
        matchLabels:
          name: mysql
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 3306  # MySQL
    - protocol: TCP
      port: 27017 # MongoDB
  
  # Allow external database connections (cloud databases)
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # External PostgreSQL
    - protocol: TCP
      port: 3306  # External MySQL

---
# Network Policy for Database Access (Applied to Database Namespaces)
# This should be applied in database namespaces to allow collector access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-db-intelligence-collector
  namespace: database  # Apply this to your database namespace
  labels:
    component: database-intelligence
    purpose: monitoring-access
spec:
  podSelector:
    matchLabels:
      app: postgresql  # Adjust for your database labels
  
  policyTypes:
  - Ingress
  
  ingress:
  # Allow collector access to database
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: nr-db-intelligence
    ports:
    - protocol: TCP
      port: 5432

---
# Egress Network Policy for Database Namespace
# Ensures databases can only be accessed by authorized monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-egress-control
  namespace: database
  labels:
    component: database-security
    purpose: egress-control
spec:
  podSelector:
    matchLabels:
      app: postgresql
  
  policyTypes:
  - Egress
  
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # Allow replica synchronization (adjust for your setup)
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
          role: replica
    ports:
    - protocol: TCP
      port: 5432
  
  # Block all other egress (customize as needed)

---
# Service Monitor for Prometheus (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: nr-db-intelligence-metrics
  namespace: monitoring
  labels:
    app: nr-db-intelligence
    component: monitoring
spec:
  selector:
    matchLabels:
      app: nr-db-intelligence
      component: service
  
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http
    
    # Relabeling for better metric organization
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: pod
    - sourceLabels: [__meta_kubernetes_namespace]
      targetLabel: kubernetes_namespace
    - sourceLabels: [__meta_kubernetes_service_name]
      targetLabel: service
    
    metricRelabelings:
    # Drop internal metrics not needed for monitoring
    - sourceLabels: [__name__]
      regex: 'go_.*'
      action: drop
    - sourceLabels: [__name__]
      regex: 'process_.*'
      action: drop

---
# Ingress for external access to collector health endpoints (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nr-db-intelligence-ingress
  namespace: monitoring
  labels:
    app: nr-db-intelligence
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - db-intelligence.monitoring.company.com
    secretName: db-intelligence-tls
  
  rules:
  - host: db-intelligence.monitoring.company.com
    http:
      paths:
      # Health check endpoint
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: nr-db-intelligence-service
            port:
              number: 13133
      
      # Metrics endpoint (restricted)
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: nr-db-intelligence-service
            port:
              number: 8888
      
      # Debug endpoint (highly restricted)
      - path: /debug
        pathType: Prefix
        backend:
          service:
            name: nr-db-intelligence-service
            port:
              number: 55679