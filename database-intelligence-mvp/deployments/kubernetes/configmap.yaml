apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-collector-config
  namespace: monitoring
data:
  collector-config.yaml: |
    receivers:
      postgresqlquery:
        databases:
          - name: "production"
            dsn: "${env:POSTGRES_DSN_PRODUCTION}"
            max_open_connections: 10
            max_idle_connections: 5
            collection_interval: 60s
            slow_query_threshold_ms: 100
          - name: "staging"
            dsn: "${env:POSTGRES_DSN_STAGING}"
            max_open_connections: 5
            max_idle_connections: 2
            collection_interval: 120s
        
        # ASH Configuration
        ash_config:
          enabled: true
          sampling_interval: 1s
          buffer_size: 3600  # 1 hour of samples
        
        # Plan Analysis
        plan_analysis:
          enabled: true
          cache_size: 10000
          analyze_slow_queries: true
          min_calls_for_analysis: 10
        
        # Adaptive Sampling
        adaptive_sampling:
          enabled: true
          default_rate: 1.0
          max_queries_per_minute: 10000
          max_memory_mb: 512
          rules:
            - name: "critical_queries"
              priority: 100
              sample_rate: 1.0
              conditions:
                - attribute: "mean_time_ms"
                  operator: "gt"
                  value: 1000
            - name: "high_frequency"
              priority: 90
              sample_rate: 0.1
              conditions:
                - attribute: "calls"
                  operator: "gt"
                  value: 1000

    processors:
      batch:
        send_batch_size: 1000
        timeout: 10s
        send_batch_max_size: 2000
      
      circuitbreaker:
        failure_threshold: 5
        success_threshold: 3
        open_state_timeout: 30s
        max_concurrent_requests: 100
        base_timeout: 5s
        max_timeout: 30s
        enable_adaptive_timeout: true
        memory_threshold_mb: 1024
        cpu_threshold_percent: 80.0
        health_check_interval: 10s
      
      attributes:
        actions:
          - key: deployment.environment
            value: "${env:ENVIRONMENT}"
            action: insert
          - key: cloud.provider
            value: "${env:CLOUD_PROVIDER}"
            action: insert
          - key: cloud.region
            value: "${env:CLOUD_REGION}"
            action: insert

    exporters:
      otlp/postgresql:
        endpoint: "${env:OTLP_ENDPOINT}"
        headers:
          api-key: "${env:NEW_RELIC_API_KEY}"
        compression: gzip
        insecure: false
        retry:
          enabled: true
          initial_interval: 1s
          max_interval: 30s
          max_elapsed_time: 5m
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 5000
        transform:
          add_database_labels: true
          normalize_query_text: true
          include_query_plans: true
          sanitize_sensitive_data: true
          metric_prefix: "postgresql."
      
      debug:
        verbosity: basic
        sampling_initial: 10
        sampling_thereafter: 100

    service:
      pipelines:
        metrics:
          receivers: [postgresqlquery]
          processors: [batch, circuitbreaker, attributes]
          exporters: [otlp/postgresql]
        
        logs:
          receivers: [postgresqlquery]
          processors: [batch, circuitbreaker, attributes]
          exporters: [otlp/postgresql, debug]
      
      telemetry:
        logs:
          level: info
          output_paths: [stdout]
          error_output_paths: [stderr]
        metrics:
          level: detailed
          address: 0.0.0.0:8888