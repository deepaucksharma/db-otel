# Stress Test Scenarios for Database Intelligence MVP

scenarios:
  # Baseline performance test
  baseline:
    name: "Baseline Performance Test"
    description: "Establish performance baseline with normal load"
    duration: 5m
    databases:
      - type: postgresql
        connections: 10
        queries_per_second: 100
        query_patterns: 20
      - type: mysql  
        connections: 10
        queries_per_second: 100
        query_patterns: 20
    expected_results:
      metric_throughput: ">1000/s"
      processing_latency: "<100ms"
      memory_usage: "<500MB"
      cpu_usage: "<50%"

  # High volume test
  high_volume:
    name: "High Volume Query Test"
    description: "Test system under high query volumes"
    duration: 15m
    databases:
      - type: postgresql
        connections: 100
        queries_per_second: 5000
        query_patterns: 1000
        slow_query_percentage: 10
      - type: mysql
        connections: 100
        queries_per_second: 5000
        query_patterns: 1000
        slow_query_percentage: 10
    expected_results:
      adaptive_sampling_active: true
      metric_loss: "<1%"
      circuit_breaker_activations: 0
      memory_usage: "<2GB"

  # Memory pressure test
  memory_pressure:
    name: "Memory Pressure Test"
    description: "Test behavior under memory constraints"
    duration: 10m
    memory_limit: 512MB
    databases:
      - type: postgresql
        connections: 50
        queries_per_second: 2000
        query_patterns: 5000  # High cardinality
    expected_results:
      oom_crashes: 0
      memory_limiter_activations: ">0"
      metric_drop_rate: "<5%"
      graceful_degradation: true

  # Database failover test
  database_failover:
    name: "Database Failover Test"
    description: "Test resilience during database failures"
    duration: 20m
    failure_scenarios:
      - time: 5m
        action: "kill_primary_database"
        duration: 2m
      - time: 10m
        action: "network_partition"
        duration: 1m
      - time: 15m
        action: "connection_pool_exhaustion"
        duration: 30s
    expected_results:
      circuit_breaker_activations: 3
      recovery_time: "<30s"
      data_loss: 0
      collector_crashes: 0

  # PII detection stress test
  pii_detection:
    name: "PII Detection Performance Test"
    description: "Measure PII sanitization overhead"
    duration: 10m
    databases:
      - type: postgresql
        connections: 20
        queries_per_second: 1000
        pii_injection_rate: 50  # 50% queries contain PII
    pii_patterns:
      - emails: 30%
      - ssn: 20%
      - credit_cards: 20%
      - phone_numbers: 30%
    expected_results:
      pii_detection_rate: ">99%"
      false_positive_rate: "<1%"
      performance_overhead: "<5%"
      sanitization_latency: "<10ms"

  # Sustained load test
  sustained_load:
    name: "24-Hour Sustained Load Test"
    description: "Test system stability over extended period"
    duration: 24h
    databases:
      - type: postgresql
        connections: 50
        queries_per_second: 1000
        query_patterns: 500
      - type: mysql
        connections: 50
        queries_per_second: 1000
        query_patterns: 500
    expected_results:
      memory_leak: false
      performance_degradation: "<10%"
      error_rate: "<0.1%"
      uptime: "100%"

  # Chaos engineering test
  chaos:
    name: "Chaos Engineering Test"
    description: "Random failures to test resilience"
    duration: 30m
    chaos_events:
      - random_database_restarts
      - network_latency_injection
      - cpu_stress
      - disk_io_stress
      - clock_skew
    expected_results:
      collector_uptime: ">99%"
      metric_delivery: ">95%"
      self_healing_success: ">90%"
      manual_interventions: 0

# Load profiles for different workload types
load_profiles:
  oltp:
    query_types:
      - select_by_id: 40%
      - insert: 30%
      - update: 20%
      - delete: 10%
    query_duration:
      p50: 1ms
      p95: 10ms
      p99: 100ms

  olap:
    query_types:
      - aggregation: 60%
      - join_heavy: 30%
      - full_scan: 10%
    query_duration:
      p50: 100ms
      p95: 1000ms
      p99: 10000ms

  mixed:
    query_types:
      - select_by_id: 30%
      - insert: 20%
      - update: 15%
      - aggregation: 20%
      - join_heavy: 15%
    query_duration:
      p50: 10ms
      p95: 500ms
      p99: 5000ms