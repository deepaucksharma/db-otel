apiVersion: v1
kind: Namespace
metadata:
  name: database-intelligence
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: database-intelligence
data:
  collector.yaml: |
    # Collector configuration loaded from configmap
    # See config/collector-ha.yaml for full configuration
---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: database-intelligence
type: Opaque
stringData:
  new-relic-license-key: "your-license-key"
  pg-password: "monitor123"
  redis-password: "redis123"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-intelligence-collector
  namespace: database-intelligence
spec:
  replicas: 3
  selector:
    matchLabels:
      app: database-intelligence-collector
  template:
    metadata:
      labels:
        app: database-intelligence-collector
    spec:
      serviceAccountName: database-intelligence-collector
      containers:
      - name: collector
        image: database-intelligence/collector:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        - containerPort: 8888
          name: metrics
        - containerPort: 13133
          name: health
        env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: new-relic-license-key
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: pg-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: redis-password
        - name: REDIS_ENDPOINT
          value: "redis-service:6379"
        - name: PG_HOST
          value: "postgresql-service"
        - name: PG_PORT
          value: "5432"
        - name: PG_USER
          value: "newrelic_monitor"
        - name: PG_DATABASE
          value: "production"
        - name: DEPLOYMENT_ENV
          value: "kubernetes"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /etc/otel-collector-config.yaml
          subPath: collector.yaml
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 13133
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: database-intelligence-service
  namespace: database-intelligence
spec:
  selector:
    app: database-intelligence-collector
  ports:
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
  - name: otlp-http
    port: 4318
    targetPort: 4318
  - name: metrics
    port: 8888
    targetPort: 8888
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: database-intelligence-collector
  namespace: database-intelligence
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: database-intelligence-collector
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: database-intelligence-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: database-intelligence-collector
subjects:
- kind: ServiceAccount
  name: database-intelligence-collector
  namespace: database-intelligence
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: database-intelligence-hpa
  namespace: database-intelligence
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: database-intelligence-collector
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: database-intelligence-pdb
  namespace: database-intelligence
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: database-intelligence-collector
---
# Redis for distributed state
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: database-intelligence
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: redis-password
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: database-intelligence
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  clusterIP: None