version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres-collector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Unified Collector
  collector:
    build:
      context: .
      dockerfile: Dockerfile.working
    container_name: postgres-collector
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # PostgreSQL Configuration
      DATABASE_URL: postgres://postgres:password@postgres:5432/testdb
      POSTGRES_CONNECTION_STRING: postgres://postgres:password@postgres:5432/testdb
      
      # New Relic Configuration
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_ACCOUNT_ID: ${NEW_RELIC_ACCOUNT_ID}
      NEW_RELIC_API_KEY: ${NEW_RELIC_API_KEY}
      NEW_RELIC_REGION: ${NEW_RELIC_REGION:-US}
      
      # Collector Configuration
      COLLECTOR_MODE: ${COLLECTOR_MODE:-nri}
      COLLECTOR_INTERVAL: 30
      COLLECTOR_PORT: 8080
      
      # Logging
      RUST_LOG: info
    ports:
      - "8080:8080"
    volumes:
      - ./config-docker.toml:/app/config.toml:ro
    command: ["-c", "/app/config.toml", "-m", "nri"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # New Relic Infrastructure Agent (optional)
  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: newrelic-infra
    cap_add:
      - SYS_PTRACE
    pid: host
    network_mode: host
    privileged: true
    environment:
      NRIA_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NRIA_DISPLAY_NAME: "postgres-collector-docker"
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./integrations.d:/etc/newrelic-infra/integrations.d:ro
    restart: unless-stopped

volumes:
  postgres_data: