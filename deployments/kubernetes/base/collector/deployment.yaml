apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-collector
  namespace: postgres-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-collector
  template:
    metadata:
      labels:
        app: postgres-collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: postgres-collector
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: collector
        image: postgres-unified-collector:latest
        imagePullPolicy: IfNotPresent
        args:
          - "-c"
          - "/etc/collector/config.toml"
        env:
          - name: POSTGRES_HOST
            value: "postgres-primary"
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DATABASE
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_DATABASE
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: newrelic-credentials
                key: NEW_RELIC_LICENSE_KEY
          - name: COLLECTOR_MODE
            value: "hybrid"  # Default, overridden by overlays
          - name: RUST_LOG
            value: "info"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - name: health
            containerPort: 8080
            protocol: TCP
          - name: metrics
            containerPort: 9090
            protocol: TCP
        volumeMounts:
          - name: config
            mountPath: /etc/collector
            readOnly: true
          - name: temp
            mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
        - name: config
          configMap:
            name: collector-config
        - name: temp
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - postgres-collector
              topologyKey: kubernetes.io/hostname