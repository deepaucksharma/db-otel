apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: testdb
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        args:
        - -c
        - shared_preload_libraries=pg_stat_statements
        - -c
        - pg_stat_statements.track=all
        - -c
        - pg_stat_statements.max=10000
        - -c
        - track_io_timing=on
        - -c
        - track_functions=all
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-primary
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  init.sql: |
    -- Enable required extensions
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    -- Create monitoring user
    CREATE USER monitoring WITH PASSWORD 'monitoring';
    GRANT pg_monitor TO monitoring;
    GRANT CONNECT ON DATABASE testdb TO monitoring;
    
    -- Create test table
    CREATE TABLE IF NOT EXISTS test_data (
      id SERIAL PRIMARY KEY,
      name VARCHAR(100),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Insert sample data
    INSERT INTO test_data (name) VALUES ('test1'), ('test2'), ('test3');
    
    -- Create slow query for testing
    CREATE OR REPLACE FUNCTION generate_slow_query() RETURNS void AS $$
    BEGIN
      PERFORM pg_sleep(3);
    END;
    $$ LANGUAGE plpgsql;