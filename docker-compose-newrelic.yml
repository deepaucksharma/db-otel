version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-newrelic
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c max_connections=200
      -c log_min_duration_statement=1000
      -c log_lock_waits=on
      -c log_statement='all'
      -c track_io_timing=on
      -c track_functions=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - postgres_data:/var/lib/postgresql/data
    networks:
      - newrelic-net

  postgres-collector:
    build:
      context: .
      dockerfile: Dockerfile-newrelic
    container_name: postgres-collector-newrelic
    environment:
      RUST_LOG: info
      OTEL_SERVICE_NAME: postgresql-unified-collector
      OTEL_RESOURCE_ATTRIBUTES: "service.namespace=production,deployment.environment=docker"
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    volumes:
      - ./config-newrelic.toml:/etc/collector/config.toml:ro
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - newrelic-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector-newrelic
    command: ["--config=/etc/otel-collector-config.yaml"]
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    volumes:
      - ./otel-collector-newrelic.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "13133:13133" # health_check extension
      - "1777:1777"   # pprof extension
    networks:
      - newrelic-net

networks:
  newrelic-net:
    driver: bridge

volumes:
  postgres_data: